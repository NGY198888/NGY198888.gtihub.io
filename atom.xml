<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>想你开心每一天</title>
  
  <subtitle>想你开心每一天</subtitle>
  <link href="/NGY198888.gtihub.io/atom.xml" rel="self"/>
  
  <link href="https://ngy198888.github.io/NGY198888.gtihub.io/"/>
  <updated>2020-07-11T18:02:08.254Z</updated>
  <id>https://ngy198888.github.io/NGY198888.gtihub.io/</id>
  
  <author>
    <name>NGY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rabbitmq安装</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/rabbitmq%E5%AE%89%E8%A3%85/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/rabbitmq%E5%AE%89%E8%A3%85/</id>
    <published>2020-07-11T17:57:03.000Z</published>
    <updated>2020-07-11T18:02:08.254Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h1><ul><li>otp_win64_21.0.1.exe</li><li>rabbitmq-server-3.7.17.exe</li><li>rabbitmq依赖Erlang语言作为环境语言otp_win64，不同的rabbitmq版本依赖的otp_win64版本也不同，对应的上即可</li></ul><h1 id="安装otp-win64-21-0-1-exe"><a href="#安装otp-win64-21-0-1-exe" class="headerlink" title="安装otp_win64_21.0.1.exe"></a>安装otp_win64_21.0.1.exe</h1><h1 id="环境变量的安装与验证"><a href="#环境变量的安装与验证" class="headerlink" title="环境变量的安装与验证"></a>环境变量的安装与验证</h1><ul><li>安装完成之后创建一个名为ERLANG_HOME的系统变量，其值指向erlang的安装目录</li><li>同时将%ERLANG_HOME%\bin加入到Path中，最后打开命令行，输入erl，如果出现erlang的版本信息就表示erlang语言环境安装成功；</li><li>注意：ERLANG_HOME的指向目录是bin的上级目录</li><li>erlang_home配置：<br><img src="/NGY198888.gtihub.io/2020/07/12/rabbitmq%E5%AE%89%E8%A3%85/11.png" alt></li></ul><h1 id="安装rabbitmq-server-3-7-17-exe"><a href="#安装rabbitmq-server-3-7-17-exe" class="headerlink" title="安装rabbitmq-server-3.7.17.exe"></a>安装rabbitmq-server-3.7.17.exe</h1><ul><li>注意，rabbitmq的默认安装目录是系统盘的Program file文件夹，但是rabbitmq其内部设置是不允许文件夹有中文，有空格的，加之功能也不适合在系统盘中，需要另外选择目录进行安装!</li><li>比如安装路径是D:\RabbitMQServer</li></ul><h1 id="开启插件"><a href="#开启插件" class="headerlink" title="开启插件"></a>开启插件</h1><ul><li>使用cmd或者powershell进入sbin目录，比如D:\RabbitMQServer\rabbitmq_server-3.7.17\sbin</li><li>运行下面几个命令<ul><li><code>./rabbitmq-plugins enable rabbitmq_management</code></li><li><code>./rabbitmq-plugins enable rabbitmq_web_stomp</code></li><li><code>./rabbitmq-plugins enable rabbitmq_web_stomp_examples</code><h1 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h1>打开服务管理器，找到RabbitMQ服务，重启服务<h1 id="添加帐号"><a href="#添加帐号" class="headerlink" title="添加帐号"></a>添加帐号</h1></li></ul></li><li>浏览器打开管理后台<a href="http://localhost:15672，">http://localhost:15672，</a></li><li>guest guest 登录，添加一个用户用于代码连接mq,我建的是admin2 admin2，分配虚拟主机 ‘/‘给该用户</li><li>由于guest不能外网登陆管理系统，所以需要再添加一个外网管理账号 admin admin，分配Admin标签给该账号<br><img src="/NGY198888.gtihub.io/2020/07/12/rabbitmq%E5%AE%89%E8%A3%85/22.png" alt></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;准备文件&quot;&gt;&lt;a href=&quot;#准备文件&quot; class=&quot;headerlink&quot; title=&quot;准备文件&quot;&gt;&lt;/a&gt;准备文件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;otp_win64_21.0.1.exe&lt;/li&gt;
&lt;li&gt;rabbitmq-server-3.7.17.exe
      
    
    </summary>
    
    
      <category term="工具" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="rabbitmq" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/rabbitmq/"/>
    
      <category term="消息队列" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
      <category term="mq" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/mq/"/>
    
  </entry>
  
  <entry>
    <title>nodered入门</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E7%89%A9%E8%81%94%E7%BD%91/nodered%E5%85%A5%E9%97%A8/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E7%89%A9%E8%81%94%E7%BD%91/nodered%E5%85%A5%E9%97%A8/</id>
    <published>2020-07-11T17:47:57.000Z</published>
    <updated>2020-07-11T17:55:24.644Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul><li>确保安装cnpm和node</li><li>cmd运行   <code>cnpm i -g node-red</code></li></ul><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>   cmd运行 <code>node-red</code>    打开localhost:1880</p><h1 id="安装dashboard模块"><a href="#安装dashboard模块" class="headerlink" title="安装dashboard模块"></a>安装dashboard模块</h1><ul><li>在右上方的部署按钮右侧有个菜单，点击菜单，选择节点管理。</li><li>搜索“dashboard”关键字，找到<code>node-red-dashboard</code>,点击安装</li></ul><h1 id="dashboard可视化界面显示"><a href="#dashboard可视化界面显示" class="headerlink" title="dashboard可视化界面显示"></a>dashboard可视化界面显示</h1><ul><li>选择dashboard面板，可以在里面添加Tabs，Tabs添加分组，将UI节点加进分组，就 可以在管理平台显示了</li><li>双击UI节点，出现属性面板，group这里进行分组，分到对应的tab去</li><li>可视化地址localhost:1880/ui<br><img src="/NGY198888.gtihub.io/2020/07/12/%E7%89%A9%E8%81%94%E7%BD%91/nodered%E5%85%A5%E9%97%A8/1.png" alt><br><img src="/NGY198888.gtihub.io/2020/07/12/%E7%89%A9%E8%81%94%E7%BD%91/nodered%E5%85%A5%E9%97%A8/2.png" alt><br><img src="/NGY198888.gtihub.io/2020/07/12/%E7%89%A9%E8%81%94%E7%BD%91/nodered%E5%85%A5%E9%97%A8/3.png" alt><br><img src="/NGY198888.gtihub.io/2020/07/12/%E7%89%A9%E8%81%94%E7%BD%91/nodered%E5%85%A5%E9%97%A8/4.png" alt></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;确保安装cnpm和node&lt;/li&gt;
&lt;li&gt;cmd运行   &lt;code&gt;cnpm i -g node-red&lt;/code&gt;&lt;/
      
    
    </summary>
    
    
      <category term="物联网" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    
      <category term="物联网" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
      <category term="nodered" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/nodered/"/>
    
  </entry>
  
  <entry>
    <title>前端规范</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/</id>
    <published>2020-07-11T17:41:44.000Z</published>
    <updated>2020-07-11T17:45:41.139Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css方面"><a href="#css方面" class="headerlink" title="css方面"></a>css方面</h1><ol><li>尽量用flex布局</li><li>使用scss</li><li>使用统一的主题参数<br><img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/1.png" alt="定义全局scc"><br><img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/2.png" alt="引用"></li><li>在psd设计文件里，字体只取文字颜色和大小两个参数即可，行高跟字体大小一样</li><li>边框注意使用大写的PX，别的话用小写px，后面会转换成rpx<h1 id="js方面"><a href="#js方面" class="headerlink" title="js方面"></a>js方面</h1></li><li>可以使用一些别名配置路径来简化import，就可以用绝对路径引用文件了<br><img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/11.png" alt></li><li>rander方法会频繁渲染，所以里面尽量不能有代码逻辑，否则会影响运行速度</li><li>要影响到子控件的布局，在本页面加上这个参数<br>static options = {<br> addGlobalClass: true<br>}</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;css方面&quot;&gt;&lt;a href=&quot;#css方面&quot; class=&quot;headerlink&quot; title=&quot;css方面&quot;&gt;&lt;/a&gt;css方面&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;尽量用flex布局&lt;/li&gt;
&lt;li&gt;使用scss&lt;/li&gt;
&lt;li&gt;使用统一的主题参数&lt;br&gt;&lt;img
      
    
    </summary>
    
    
      <category term="前端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="规范" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>electron问题</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/electron%E9%97%AE%E9%A2%98/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/electron%E9%97%AE%E9%A2%98/</id>
    <published>2020-07-11T17:38:21.000Z</published>
    <updated>2020-07-11T17:39:46.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运行electron打包的exe程序黑屏"><a href="#运行electron打包的exe程序黑屏" class="headerlink" title="运行electron打包的exe程序黑屏"></a>运行electron打包的exe程序黑屏</h1><p>  右键运行图标 在运行后面加参数  –disable-gpu<br>  <img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/electron%E9%97%AE%E9%A2%98/1.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;运行electron打包的exe程序黑屏&quot;&gt;&lt;a href=&quot;#运行electron打包的exe程序黑屏&quot; class=&quot;headerlink&quot; title=&quot;运行electron打包的exe程序黑屏&quot;&gt;&lt;/a&gt;运行electron打包的exe程序黑屏&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="前端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="electron" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/electron/"/>
    
      <category term="桌面开发" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E6%A1%8C%E9%9D%A2%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>SKU选择算法笔记</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/SKU%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/SKU%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95/</id>
    <published>2020-07-11T16:48:08.000Z</published>
    <updated>2020-07-12T17:34:26.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>   网上搜的搞不懂，记录一种自己的笨方案，代码部分涉及es6，ui渲染没有贴出来</p><h1 id="sku定义"><a href="#sku定义" class="headerlink" title="sku定义"></a>sku定义</h1><p>   SKU=Stock Keeping Unit（库存量单位）。即库存进出计量的基本单元，可以是以件，盒，托盘等为单位。SKU这是对于大型连锁超市DC（配送中心）物流管理的一个必要的方法。现在已经被引申为产品统一编号的简称，每种产品均对应有唯一的SKU号</p><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><ul><li><p>这个设计跟网上的设计有所不同，网上是用id表示唯一性的，但是这里的id不能用于sku计算</p></li><li><p>mall_goods_attr_key存放的是商品的规格组，比如某咖啡有颜色，尺码等规格组</p></li><li><p>mall_goods_attr_val存放的是商品规格组的规格值，比如某咖啡的颜色规格组有红色，白色，黑色等规格值</p></li><li><p>mall_goods_attr_sku存放的是某个具体的且有库存的sku信息，并且本方案是由具体的sku来决定自己的图片，没有图片的sku或者当没有命中sku时，显示商品默认图片<br><img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/SKU%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95/1.png" alt><br><img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/SKU%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95/2.png" alt><br><img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/SKU%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95/3.png" alt></p><h1 id="接口返回数据"><a href="#接口返回数据" class="headerlink" title="接口返回数据"></a>接口返回数据</h1><p>sku表数据原样返回<br>key和val表数据进行了整合，每一条表示一个规格组，vals表示他有哪些规格值，key，val都是按照序号排序过的<br><img src="/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/SKU%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95/4.png" alt></p><h1 id="计算类"><a href="#计算类" class="headerlink" title="计算类"></a>计算类</h1><h2 id="说明-select-index-之前表示-当此选择的项下标，传null则代表取消勾选-后来改成直接传规格值文字了"><a href="#说明-select-index-之前表示-当此选择的项下标，传null则代表取消勾选-后来改成直接传规格值文字了" class="headerlink" title="说明 select_index 之前表示 当此选择的项下标，传null则代表取消勾选,后来改成直接传规格值文字了"></a>说明 select_index 之前表示 当此选择的项下标，传null则代表取消勾选,后来改成直接传规格值文字了</h2><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token keyword">import</span> _cloneDeep <span class="token keyword">from</span> <span class="token string">'lodash/cloneDeep'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">SkuLogic</span><span class="token punctuation">{</span><span class="token function">dealImage</span><span class="token punctuation">(</span>goods_list<span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> goods_list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>goods_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>selectSku<span class="token operator">!=</span><span class="token keyword">null</span><span class="token operator">&amp;&amp;</span>goods_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>selectSku<span class="token punctuation">.</span>image<span class="token operator">!=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            goods_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>path<span class="token operator">=</span>goods_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>selectSku<span class="token punctuation">.</span>image<span class="token punctuation">;</span>            goods_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>sm_path<span class="token operator">=</span>goods_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>selectSku<span class="token punctuation">.</span>image<span class="token punctuation">;</span>        <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> goods_list<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">initGoodsInfo</span><span class="token punctuation">(</span>goods_info<span class="token punctuation">)</span><span class="token punctuation">{</span>    goods_info<span class="token punctuation">.</span>sku<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initSkus</span><span class="token punctuation">(</span>goods_info<span class="token punctuation">.</span>sku<span class="token punctuation">,</span>goods_info<span class="token punctuation">.</span>skuKeyVals<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> <span class="token punctuation">{</span>selectSku<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>selectSkuTips<span class="token punctuation">}</span><span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initSkuSpecs</span><span class="token punctuation">(</span>goods_info<span class="token punctuation">.</span>sku<span class="token punctuation">,</span>goods_info<span class="token punctuation">.</span>skuKeyVals<span class="token punctuation">)</span><span class="token punctuation">;</span>    goods_info<span class="token punctuation">.</span>totalStock<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcTotalStock</span><span class="token punctuation">(</span>goods_info<span class="token punctuation">.</span>sku<span class="token punctuation">)</span>    goods_info<span class="token punctuation">.</span>selectSku<span class="token operator">=</span>selectSku    goods_info<span class="token punctuation">.</span>skuSpecs<span class="token operator">=</span>skuSpecs    goods_info<span class="token punctuation">.</span>selectSkuTips<span class="token operator">=</span>selectSkuTips    <span class="token keyword">if</span><span class="token punctuation">(</span>goods_info<span class="token punctuation">.</span>skuSpecs<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span>        <span class="token operator">&amp;&amp;</span>goods_info<span class="token punctuation">.</span>sku<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">1</span>        <span class="token operator">&amp;&amp;</span>goods_info<span class="token punctuation">.</span>selectSku        <span class="token operator">&amp;&amp;</span>goods_info<span class="token punctuation">.</span>selectSku<span class="token punctuation">.</span>stock<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        goods_info<span class="token punctuation">.</span>num<span class="token operator">=</span><span class="token number">0</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> goods_info<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">get_key_path</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>skuSpecs<span class="token operator">&amp;&amp;</span>skuSpecs<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> groupName_arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> skuSpecs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> groupName<span class="token operator">=</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>groupName<span class="token operator">||</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>name             groupName_arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>groupName<span class="token punctuation">)</span>        <span class="token punctuation">}</span>       <span class="token keyword">return</span> groupName_arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">initSkus</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuKeyVals<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>skus<span class="token operator">&amp;&amp;</span>skus<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> skus<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token operator">=</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token operator">||</span><span class="token number">0</span><span class="token punctuation">)</span>            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>discount_price<span class="token operator">=</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>discount_price<span class="token operator">||</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>price<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//没填就是原价</span>            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>discount_price<span class="token operator">=</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>discount_price<span class="token punctuation">)</span>            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>stock<span class="token operator">=</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>stock<span class="token operator">||</span><span class="token number">0</span><span class="token punctuation">)</span>            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>attr_path<span class="token operator">=</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>attr_path<span class="token operator">||</span><span class="token string">''</span>            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>sku_key_path<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get_key_path</span><span class="token punctuation">(</span>skuKeyVals<span class="token punctuation">)</span><span class="token punctuation">;</span>            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>sku_val_path<span class="token operator">=</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>attr_path            skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>image<span class="token operator">=</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>image<span class="token operator">||</span><span class="token string">''</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> skus<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//获取sku的规格组</span><span class="token function">initSkuSpecs</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuKeyVals<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span>  skuSpecs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">let</span>  selectSku<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>skuKeyVals<span class="token operator">&amp;&amp;</span>skuKeyVals<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">let</span> select_able_ranges<span class="token operator">=</span><span class="token function">init_select_able_ranges</span><span class="token punctuation">(</span>skuKeyVals<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//每组可选范围</span>        select_able_ranges<span class="token operator">=</span> <span class="token function">init_ranges_by_stock</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>select_able_ranges<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>skuKeyVals<span class="token operator">&amp;&amp;</span>skuKeyVals<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> skuKeyVals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> vals<span class="token operator">=</span><span class="token punctuation">(</span>skuKeyVals<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'vals'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">=</span>                <span class="token punctuation">{</span>                    groupName<span class="token punctuation">:</span>skuKeyVals<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    spec_list<span class="token punctuation">:</span>vals<span class="token punctuation">,</span>                    select_index<span class="token punctuation">:</span><span class="token keyword">null</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">//交集</span>                    select_able_range<span class="token punctuation">:</span>select_able_ranges<span class="token punctuation">[</span>index<span class="token punctuation">]</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    selectSku<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcSelectSku</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> selectSkuTips<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcSelectSkuTips</span><span class="token punctuation">(</span>selectSku<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>skus<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>selectSku<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>selectSkuTips<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * 重新计算sku规格信息  * @param {*} skus 数据库拿到的sku数据 * @param {*} skuKeyVals 数据库拿到的skuKeyVals数据 * @param {*} skuSpecs 带有选中信息的sku结构 * @param {*} group_index 当此选择的组下标 * @param {*} select_index  当此选择的项下标，传null则代表取消勾选 */</span><span class="token function">calcSkuSpecs</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuKeyVals<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>group_index<span class="token punctuation">,</span>select_index<span class="token punctuation">,</span>_selectSku<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span>  selectSku<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> checkSpec_arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//已经选择过的sku规格</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">[</span>group_index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_able_range<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>val<span class="token operator">=</span><span class="token operator">></span>val<span class="token operator">==</span> select_index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//只响应可选的项</span>        skuSpecs<span class="token punctuation">[</span>group_index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token operator">=</span>skuSpecs<span class="token punctuation">[</span>group_index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token operator">==</span>select_index<span class="token operator">?</span><span class="token keyword">null</span><span class="token punctuation">:</span>select_index<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//前后相等表示取消选择</span>        <span class="token keyword">let</span> select_able_ranges<span class="token operator">=</span><span class="token function">init_select_able_ranges</span><span class="token punctuation">(</span>skuKeyVals<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//每组可选范围</span>        select_able_ranges<span class="token operator">=</span> <span class="token function">init_ranges_by_stock</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>select_able_ranges<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>skus<span class="token operator">&amp;&amp;</span>skus<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//模拟手动选择过程</span>            skuSpecs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>skuSpec<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>skuSpec<span class="token punctuation">.</span>select_index<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token keyword">let</span> <span class="token punctuation">{</span>select_able_ranges2<span class="token punctuation">,</span>checkSpec_arr2<span class="token punctuation">}</span><span class="token operator">=</span><span class="token function">checkSpec</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>select_able_ranges<span class="token punctuation">,</span>index<span class="token punctuation">,</span>skuSpec<span class="token punctuation">.</span>select_index<span class="token punctuation">,</span>checkSpec_arr<span class="token punctuation">)</span><span class="token punctuation">;</span>                  select_able_ranges<span class="token operator">=</span>select_able_ranges2<span class="token punctuation">;</span>                  checkSpec_arr<span class="token operator">=</span>checkSpec_arr2<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            skuSpecs<span class="token operator">=</span> skuSpecs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>skuSpec<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                skuSpec<span class="token punctuation">.</span>select_able_range<span class="token operator">=</span>select_able_ranges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token keyword">return</span> skuSpec<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        selectSku<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcSelectSku</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        selectSku<span class="token operator">=</span>_selectSku<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> selectSkuTips<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">calcSelectSkuTips</span><span class="token punctuation">(</span>selectSku<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>skus<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>selectSku<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">:</span><span class="token function">_cloneDeep</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">)</span><span class="token punctuation">,</span>selectSkuTips<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">calcSelectSkuTips</span><span class="token punctuation">(</span>selectSku<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>skus<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>skus<span class="token operator">||</span>skus<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'未设置规格'</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>selectSku<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>selectSku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token operator">!=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">let</span> attrs <span class="token operator">=</span> <span class="token punctuation">(</span>selectSku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">'已选 "'</span><span class="token operator">+</span>attrs<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'","'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'"'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">''</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> unSelect<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> skuSpecs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                unSelect<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>groupName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token string">'请选择 "'</span><span class="token operator">+</span>unSelect<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'","'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'"'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * 计算选择了哪个sku * @param {*} skus  * @param {*} skuSpecs  */</span><span class="token function">calcSelectSku</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span>  selectSku<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">let</span>  path_now<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token operator">||</span>skus<span class="token operator">&amp;&amp;</span>skus<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">1</span><span class="token operator">||</span><span class="token punctuation">(</span>skus<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//&amp;&amp;skus[0]['attr_path']==''</span>        selectSku<span class="token operator">=</span>skus<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> skuSpecs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                path_now<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">let</span> path_str<span class="token operator">=</span> path_now<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"|"</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> sku_now<span class="token operator">=</span> skus<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>sku<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token operator">==</span>path_str<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>sku_now<span class="token punctuation">)</span><span class="token punctuation">{</span>            selectSku<span class="token operator">=</span>sku_now        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> selectSku<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** sku总库存 */</span><span class="token function">calcTotalStock</span><span class="token punctuation">(</span>skus<span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">let</span> stock<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> skus<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        stock<span class="token operator">+</span><span class="token operator">=</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>skus<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>stock<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> stock<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * 每次计算选择的某一组对当前select_able_ranges的影响 * @param {*} skus  * @param {*} skuSpecs  * @param {*} select_able_ranges  * @param {*} group_index  * @param {*} select_text  * @returns select_able_ranges2 被影响后的select_able_ranges */</span><span class="token keyword">function</span> <span class="token function">checkSpec</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>skuSpecs<span class="token punctuation">,</span>select_able_ranges<span class="token punctuation">,</span>group_index<span class="token punctuation">,</span>select_text<span class="token punctuation">,</span>checkSpec_arr2<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> select_able_ranges2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//每组可选范围</span>    <span class="token comment" spellcheck="true">//let select_text=select_text</span>    <span class="token keyword">let</span> select_text_arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    checkSpec_arr2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">[</span>group_index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> checkSpec_arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        select_text_arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>checkSpec_arr2<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token punctuation">)</span> <span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> select_able_specOne<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//重新拿到有库存的规格，用于过滤未选的sku规格</span>    skus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sku<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'stock'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token function">isContained</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>select_text_arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">let</span> attrs <span class="token operator">=</span> <span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            select_able_specOne <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>select_able_specOne<span class="token punctuation">,</span> <span class="token operator">...</span>attrs<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 并集</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> select_able_ranges<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> _i<span class="token operator">=</span>select_text_arr<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token operator">></span>text<span class="token operator">==</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token operator">!=</span><span class="token keyword">null</span><span class="token operator">&amp;&amp;</span>_i<span class="token operator">></span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//已选的sku规格，用除了自己之外的已选sku规格来决定他自己哪些能选</span>           <span class="token keyword">let</span> select_text_arr2<span class="token operator">=</span>select_text_arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token operator">></span>text<span class="token operator">!=</span>skuSpecs<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>select_index<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> select_able_specOne2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            skus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sku<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'stock'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token function">isContained</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>select_text_arr2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">let</span> attrs <span class="token operator">=</span> <span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    select_able_specOne2 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>select_able_specOne2<span class="token punctuation">,</span> <span class="token operator">...</span>attrs<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 并集</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            select_able_ranges2<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>select_able_ranges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>select_able_specOne2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            select_able_ranges2<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">=</span>Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>select_able_ranges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>select_able_specOne<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>select_able_ranges2<span class="token punctuation">,</span>checkSpec_arr2<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//是否被包含,是返回true,不是返回false</span><span class="token keyword">function</span>  isContained <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> aStr <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> b<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>aStr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*** 初始化 select_able_ranges* @param {*} skuKeyVals */</span><span class="token keyword">function</span> <span class="token function">init_select_able_ranges</span><span class="token punctuation">(</span>skuKeyVals<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">let</span> select_able_ranges<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//每组可选范围</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>skuKeyVals<span class="token operator">&amp;&amp;</span>skuKeyVals<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> skuKeyVals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> vals<span class="token operator">=</span><span class="token punctuation">(</span>skuKeyVals<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'vals'</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            select_able_ranges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">=</span>vals<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> select_able_ranges<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*** 计算库存对select_able_ranges的影响* @param {*} skus * @param {*} select_able_ranges */</span><span class="token keyword">function</span> <span class="token function">init_ranges_by_stock</span><span class="token punctuation">(</span>skus<span class="token punctuation">,</span>select_able_ranges<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> select_able_specs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>skus <span class="token operator">&amp;&amp;</span> skus<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        skus<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sku<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'stock'</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> attrs <span class="token operator">=</span> <span class="token punctuation">(</span>sku<span class="token punctuation">[</span><span class="token string">'attr_path'</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                select_able_specs <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>select_able_specs<span class="token punctuation">,</span> <span class="token operator">...</span>attrs<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 并集</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> select_able_ranges<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        select_able_ranges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>select_able_specs<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span> select_able_ranges<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> select_able_ranges<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="字段定义"><a href="#字段定义" class="headerlink" title="字段定义"></a>字段定义</h1><ul><li>拿到商品信息GoodsInfo,即3步骤的数据结构，调用initGoodsInfo进行初始化<code>GoodsInfo=skuLogic.initGoodsInfo(GoodsInfo);</code>这之后，GoodsInfo里会多出三个数据结构</li><li><code>selectSku</code> 命中的sku，没有命中时是null</li><li><code>selectSkuTips</code> 选择提示，没有命中时，提示选择余下的规格组，命中后提示选了哪些规格值</li><li><code>skuSpecs</code>用于渲染界面，也用于计算sku，每一项表示一个规格组</li><li><code>select_able_ranges</code>表示可选的规格值</li><li><code>select_index</code>表示选中的规格值，null表示未选择</li><li><code>spec_list</code>表示所有规格值<h1 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h1></li><li>有四种类型的规格值<ul><li>不可选</li><li>在已选择列可选且已选中的规格值</li><li>在未选择列的可选规格值</li><li>在已选择列其他可选规格值</li></ul></li><li>初始化的时候，查询sku列表能知道哪些是永远不可选的，哪些是可选的</li><li>当做一次选择的时候<ul><li>2类型的规格值是知道的，你选了哪些规格值就是哪些，</li><li>3类型的规格值确定，由包含已选路径的sku来确定</li><li>4类型的规格值确定，当你要确定某一个已选列的其他可选规格值的时候，已选路径去掉当前列已选规格值，作为新的已选路径，由包含新的已选路径的sku来确定4类型的点</li><li>其他的就是1类型的规格值</li><li>四种类型的规格值构成skuSpecs</li><li>已选路径能确定是否命中sku</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;   网上搜的搞不懂，记录一种自己的笨方案，代码部分涉及es6，ui渲染没有贴出来&lt;/p&gt;
&lt;h1 id=&quot;sku定义&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="前端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="SKU" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/SKU/"/>
    
      <category term="商城" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E5%95%86%E5%9F%8E/"/>
    
      <category term="最小库存单元" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E6%9C%80%E5%B0%8F%E5%BA%93%E5%AD%98%E5%8D%95%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>centos包装服务systemctl</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%90%8E%E7%AB%AF/centos%E5%8C%85%E8%A3%85%E6%9C%8D%E5%8A%A1systemctl/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%90%8E%E7%AB%AF/centos%E5%8C%85%E8%A3%85%E6%9C%8D%E5%8A%A1systemctl/</id>
    <published>2020-07-11T16:42:58.000Z</published>
    <updated>2020-07-11T16:46:49.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="将frpc包装成服务，开机启动"><a href="#将frpc包装成服务，开机启动" class="headerlink" title="将frpc包装成服务，开机启动"></a>将frpc包装成服务，开机启动</h1><h2 id="在frpc执行文件目录下打pwd，找到当前路径，比如-root-frp-0-33-0-linux-amd64"><a href="#在frpc执行文件目录下打pwd，找到当前路径，比如-root-frp-0-33-0-linux-amd64" class="headerlink" title="在frpc执行文件目录下打pwd，找到当前路径，比如/root/frp_0.33.0_linux_amd64/"></a>在frpc执行文件目录下打pwd，找到当前路径，比如/root/frp_0.33.0_linux_amd64/</h2><h2 id="新建frpc-service文件"><a href="#新建frpc-service文件" class="headerlink" title="新建frpc.service文件"></a>新建frpc.service文件</h2><p>编辑内容</p><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>Description<span class="token operator">=</span>Frp Client ServiceAfter<span class="token operator">=</span>network<span class="token punctuation">.</span>target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>Type<span class="token operator">=</span>simpleUser<span class="token operator">=</span>rootRestart<span class="token operator">=</span>on<span class="token operator">-</span>failureRestartSec<span class="token operator">=</span>5sExecStart<span class="token operator">=</span><span class="token operator">/</span>root<span class="token operator">/</span>frp_0<span class="token number">.33</span><span class="token punctuation">.</span>0_linux_amd64<span class="token operator">/</span>frpc <span class="token operator">-</span>c <span class="token operator">/</span>root<span class="token operator">/</span>frp_0<span class="token number">.33</span><span class="token punctuation">.</span>0_linux_amd64<span class="token operator">/</span>frpc<span class="token punctuation">.</span>iniExecReload<span class="token operator">=</span><span class="token operator">/</span>root<span class="token operator">/</span>frp_0<span class="token number">.33</span><span class="token punctuation">.</span>0_linux_amd64<span class="token operator">/</span>frpc reload <span class="token operator">-</span>c <span class="token operator">/</span>root<span class="token operator">/</span>frp_0<span class="token number">.33</span><span class="token punctuation">.</span>0_linux_amd64<span class="token operator">/</span>frpc<span class="token punctuation">.</span>ini<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy<span class="token operator">=</span>multi<span class="token operator">-</span>user<span class="token punctuation">.</span>target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将上面的文件复制到-usr-lib-systemd-system目录下"><a href="#将上面的文件复制到-usr-lib-systemd-system目录下" class="headerlink" title="将上面的文件复制到 /usr/lib/systemd/system目录下"></a>将上面的文件复制到 /usr/lib/systemd/system目录下</h2><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>   <code>systemctl start frpc</code></p><h2 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h2><p>   <code>systemctl enable frpc</code></p><h2 id="查看服务状态"><a href="#查看服务状态" class="headerlink" title="查看服务状态"></a>查看服务状态</h2><p>   <code>systemctl status frpc</code><br>   当看到 <code>Active: active (running)</code>，即为已启动成功，其他的状态是未启动成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;将frpc包装成服务，开机启动&quot;&gt;&lt;a href=&quot;#将frpc包装成服务，开机启动&quot; class=&quot;headerlink&quot; title=&quot;将frpc包装成服务，开机启动&quot;&gt;&lt;/a&gt;将frpc包装成服务，开机启动&lt;/h1&gt;&lt;h2 id=&quot;在frpc执行文件目录下打
      
    
    </summary>
    
    
      <category term="后端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="contos" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/contos/"/>
    
      <category term="服务" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>taro笔记</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/taro%E7%AC%94%E8%AE%B0/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%89%8D%E7%AB%AF/taro%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-11T16:35:49.000Z</published>
    <updated>2020-07-11T16:38:41.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分享的问题"><a href="#分享的问题" class="headerlink" title="分享的问题"></a>分享的问题</h1><p>  onShareAppMessage是分享前的拦截函数，我们在这里设置分享标题和要跳转的链接，但是它只在页面生效，如果是在组件里面写onShareAppMessage，是不会触发的。组件和页面之间隔了很多层级，props传递就导致很多中间组件需要调整，不好处理。</p><ul><li><h1 id="处理方案"><a href="#处理方案" class="headerlink" title="处理方案"></a>处理方案</h1><ul><li><p>修改组件和页面的代码</p><ul><li><p>组件修改:分享按钮带上data-title，data-path，这是onShareAppMessage返回需要的数据结构<br><code>&lt;Button data-title={&quot;好运分享&quot;} data-path={&#39;xxxx?id=xxx&#39;} openType=&quot;share&quot;&gt;分享&lt;/Button&gt;</code></p></li><li><p>页面修改onShareAppMessage，ops.target.dataset里面包含了title，path</p><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token function">onShareAppMessage</span><span class="token punctuation">(</span>ops<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> ops<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;分享的问题&quot;&gt;&lt;a href=&quot;#分享的问题&quot; class=&quot;headerlink&quot; title=&quot;分享的问题&quot;&gt;&lt;/a&gt;分享的问题&lt;/h1&gt;&lt;p&gt;  onShareAppMessage是分享前的拦截函数，我们在这里设置分享标题和要跳转的链接，但是它只在页面生效，
      
    
    </summary>
    
    
      <category term="前端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="taro" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/taro/"/>
    
      <category term="小程序" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>jar包部署为windows服务</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%90%8E%E7%AB%AF/jar%E5%8C%85%E9%83%A8%E7%BD%B2%E4%B8%BAwindows%E6%9C%8D%E5%8A%A1/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%90%8E%E7%AB%AF/jar%E5%8C%85%E9%83%A8%E7%BD%B2%E4%B8%BAwindows%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-07-11T16:20:14.000Z</published>
    <updated>2020-07-11T16:32:58.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><ul><li>已经安装并配置好jdk</li><li>有.NET4运行环境</li><li>准备好可运行jar包</li><li>下载好文件 <a href="https://github.com/kohsuke/winsw/releases/download/winsw-v2.2.0/sample-minimal.xml" target="_blank" rel="noopener">sample-minimal.xml</a> ，<a href="https://github.com/kohsuke/winsw/releases/download/winsw-v2.2.0/WinSW.NET4.exe" target="_blank" rel="noopener">WinSW.NET4.exe</a></li></ul><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>  下载WinSW到jar目录下，sample-minimal.xml，WinSW.NET4.exe，统一两个的文件名为WinSW，假设jar文件是IntelligenScale.jar</p><h1 id="修改WinSW-xml配置"><a href="#修改WinSW-xml配置" class="headerlink" title="修改WinSW.xml配置"></a>修改WinSW.xml配置</h1><pre class="line-numbers language-xml" mdui-tooltip="{content: 'xml'}"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- ID of the service. It should be unique accross the Windows system--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>IntelligenScale<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- Display name of the service --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>IntelligenScale<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- Service description --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>电子秤数据采集服务<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- Path to the executable, which should be started --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executable</span><span class="token punctuation">></span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executable</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arguments</span><span class="token punctuation">></span></span>-jar IntelligenScale.jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>arguments</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>startmode</span><span class="token punctuation">></span></span>Automatic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>startmode</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>log</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>append<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logpath</span><span class="token punctuation">></span></span>logs/service.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logpath</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>log</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="创建运行文件"><a href="#创建运行文件" class="headerlink" title="创建运行文件"></a>创建运行文件</h1><ul><li>安装服务(超管运行).bat <code>java -jar IntelligenScale.jar</code></li><li>卸载服务(超管运行).bat <code>WinSW.exe uninstall</code></li><li>运行这两个文件即可完成安装和卸载</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境要求&quot;&gt;&lt;a href=&quot;#环境要求&quot; class=&quot;headerlink&quot; title=&quot;环境要求&quot;&gt;&lt;/a&gt;环境要求&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;已经安装并配置好jdk&lt;/li&gt;
&lt;li&gt;有.NET4运行环境&lt;/li&gt;
&lt;li&gt;准备好可运行jar包&lt;/li&gt;
      
    
    </summary>
    
    
      <category term="后端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/java/"/>
    
      <category term="jar" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/jar/"/>
    
      <category term="windows服务" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/windows%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>java上传文件流到php服务器</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%90%8E%E7%AB%AF/java%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%B5%81%E5%88%B0php%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%90%8E%E7%AB%AF/java%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%B5%81%E5%88%B0php%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-07-11T16:14:04.000Z</published>
    <updated>2020-07-11T16:19:16.473Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>  我的思路，通过http的post提交，post主要参数：</p><ul><li>file(即byte[]文件流)</li><li>ext(文件扩展名)<h1 id="mvn依赖"><a href="#mvn依赖" class="headerlink" title="mvn依赖"></a>mvn依赖</h1></li><li>httpclient(发起请求)</li><li>httpmime(使用到MultipartEntityBuilder)</li><li>fastjson(解析结果)<h1 id="java上传代码"><a href="#java上传代码" class="headerlink" title="java上传代码"></a>java上传代码</h1><pre class="line-numbers language-java" mdui-tooltip="{content: 'java'}"><code class="language-java"><span class="token comment" spellcheck="true">/*** 将文件提交至文件服务器* @param fileByte 文件对象* @return FileStatus 上传结果*/</span><span class="token keyword">public</span> <span class="token keyword">static</span> ApiResult <span class="token function">postFile</span><span class="token punctuation">(</span>String url<span class="token punctuation">,</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fileByte<span class="token punctuation">,</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">></span> paramsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>CloseableHttpClient httpclient <span class="token operator">=</span> HttpClients<span class="token punctuation">.</span><span class="token function">createDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CloseableHttpResponse response <span class="token operator">=</span> null<span class="token punctuation">;</span>ApiResult res<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ApiResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">{</span>    HttpPost httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//"http://localhost:8844/common/Comm_Api/streamuploader?XDEBUG_SESSION_START=19300"</span>    MultipartEntityBuilder mEntityBuilder <span class="token operator">=</span> MultipartEntityBuilder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mEntityBuilder<span class="token punctuation">.</span><span class="token function">addBinaryBody</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">,</span> fileByte<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>paramsMap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Set<span class="token operator">&lt;</span>String<span class="token operator">></span> keySet <span class="token operator">=</span> paramsMap<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>String key<span class="token operator">:</span>keySet<span class="token punctuation">)</span> <span class="token punctuation">{</span>            String value <span class="token operator">=</span> paramsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>            mEntityBuilder<span class="token punctuation">.</span><span class="token function">addTextBody</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span>mEntityBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    response <span class="token operator">=</span> httpclient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> statusCode <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>statusCode <span class="token operator">==</span> HttpStatus<span class="token punctuation">.</span>SC_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HttpEntity resEntity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String  rs <span class="token operator">=</span> EntityUtils<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>resEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 消耗掉response</span>        EntityUtils<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>resEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token string">"Read timed out"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">)</span>                res<span class="token operator">=</span>JSONObject<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>rs<span class="token punctuation">,</span> ApiResult<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            LogTool<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"http请求异常 url:"</span><span class="token operator">+</span>url<span class="token operator">+</span><span class="token string">" 结果："</span><span class="token operator">+</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        LogTool<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"http请求异常 url:"</span><span class="token operator">+</span>url<span class="token operator">+</span><span class="token string">" 结果：statusCode"</span><span class="token operator">+</span>statusCode<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ParseException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>    HttpClientUtils<span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>httpclient<span class="token punctuation">)</span><span class="token punctuation">;</span>    HttpClientUtils<span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="php接收代码-使用到了tp5框架"><a href="#php接收代码-使用到了tp5框架" class="headerlink" title="php接收代码 使用到了tp5框架"></a>php接收代码 使用到了tp5框架</h1><pre class="line-numbers language-php" mdui-tooltip="{content: 'php'}"><code class="language-php">接口代码：<span class="token comment" spellcheck="true">/**接收文件流* 参数file 文件流* 参数ext 保存文件的扩展名* @return \app\common\webapi\Array|void*/</span><span class="token keyword">function</span>  <span class="token function">streamuploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token variable">$streamData</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'ext'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'ext'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token variable">$rs</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Streamuploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">receiveStreamFile</span><span class="token punctuation">(</span><span class="token variable">$streamData</span><span class="token punctuation">,</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$rs</span><span class="token punctuation">[</span><span class="token string">"ok"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> Web<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token variable">$rs</span><span class="token punctuation">[</span><span class="token string">"path"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> Web<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">err</span><span class="token punctuation">(</span><span class="token string">"上传失败"</span><span class="token punctuation">.</span><span class="token variable">$rs</span><span class="token punctuation">[</span><span class="token string">"err"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>保存文件流代码：<br>/**接收保存流文件</p><ul><li>@param string $streamData 文件流</li><li>@param string $ext   扩展名</li><li>@return array ok=true表示保存成功</li><li>/<br>function receiveStreamFile(string $streamData,string $ext){<br>  $rs=[“ok”=&gt;false,”path”=&gt;””,”err”=&gt;””];<br>  try{<pre><code>  if(!empty($streamData)&amp;&amp;!empty($ext)){      $ext=strtolower($ext);      $uuid=uniqid(&quot;cam_&quot;);      $uploadDir = &#39;uploads/Images&#39;;      if($ext==&quot;flv&quot;){          $uuid=uniqid(&quot;video_&quot;);          $uploadDir = &#39;uploads/sf_video/&#39;.date(&quot;Y-m-d&quot;);      }      // 创建目标目录      if (!file_exists($uploadDir)) {          mkdir($uploadDir,0777,true);//mkdir() 函数创建目录。      }      $path=$uploadDir.&quot;/&quot;.$uuid.&quot;.&quot;.$ext;      file_put_contents($path, $streamData, true);      $rs[&quot;ok&quot;]=true;      $rs[&quot;path&quot;]=$path;  }</code></pre>  }catch (Exception $exception){<pre><code>  $rs[&quot;err&quot;]=$exception-&gt;getMessage();  Log::error(&quot;保存文件流失败 &quot;.$exception-&gt;getMessage().&quot;|&quot;.$exception-&gt;getTraceAsString());</code></pre>  }<br>  return $rs;<br>}</li></ul><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h1&gt;&lt;p&gt;  我的思路，通过http的post提交，post主要参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;file(即byte[]文件流)&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="后端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="java" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/java/"/>
    
      <category term="上传" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="php" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>IDEA问题</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%B7%A5%E5%85%B7/IDEA%E9%97%AE%E9%A2%98/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/12/%E5%B7%A5%E5%85%B7/IDEA%E9%97%AE%E9%A2%98/</id>
    <published>2020-07-11T16:11:17.000Z</published>
    <updated>2020-07-11T16:12:46.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java-找不到符号符号-类-JSerialComm-位置-程序包-joy-comport"><a href="#java-找不到符号符号-类-JSerialComm-位置-程序包-joy-comport" class="headerlink" title="java: 找不到符号符号:   类 JSerialComm  位置: 程序包 joy.comport"></a>java: 找不到符号符号:   类 JSerialComm  位置: 程序包 joy.comport</h1><p>  把找不到的模块(比如joy_common)移除，然后重新添加该模块，设置好java编译版本</p><h1 id="java-jar-执行jar包出现-java-lang-NoClassDefFoundError"><a href="#java-jar-执行jar包出现-java-lang-NoClassDefFoundError" class="headerlink" title="java -jar 执行jar包出现 java.lang.NoClassDefFoundError"></a>java -jar 执行jar包出现 java.lang.NoClassDefFoundError</h1><p>  在IDEA里，删除Artifacts配置，重新添加配置生成jar</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java-找不到符号符号-类-JSerialComm-位置-程序包-joy-comport&quot;&gt;&lt;a href=&quot;#java-找不到符号符号-类-JSerialComm-位置-程序包-joy-comport&quot; class=&quot;headerlink&quot; title=&quot;ja
      
    
    </summary>
    
    
      <category term="工具" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="java" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/java/"/>
    
      <category term="IDEA" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>rabbitmq，taro,小程序，stomp</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/%E5%89%8D%E7%AB%AF/rabbitmq%EF%BC%8Ctaro-%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%8Cstomp/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/%E5%89%8D%E7%AB%AF/rabbitmq%EF%BC%8Ctaro-%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%8Cstomp/</id>
    <published>2020-07-10T19:00:55.000Z</published>
    <updated>2020-07-11T16:05:05.635Z</updated>
    
    <content type="html"><![CDATA[<h2 id="stompjs下载，（不要用npm安装stomp）"><a href="#stompjs下载，（不要用npm安装stomp）" class="headerlink" title="stompjs下载，（不要用npm安装stomp）"></a>stompjs下载，（不要用npm安装stomp）</h2><p><a href="https://github.com/rabbitmq/rabbitmq-web-stomp-examples/tree/master/priv" target="_blank" rel="noopener">下载地址</a></p><h2 id="rabbitmq的连接配置"><a href="#rabbitmq的连接配置" class="headerlink" title="rabbitmq的连接配置"></a>rabbitmq的连接配置</h2><p><img src="https://img-blog.csdnimg.cn/20200701174211411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05HWTE5ODg4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="基于Taro，stomp的RabbitMQ消费者实现"><a href="#基于Taro，stomp的RabbitMQ消费者实现" class="headerlink" title="基于Taro，stomp的RabbitMQ消费者实现"></a>基于Taro，stomp的RabbitMQ消费者实现</h2><pre class="line-numbers language-javascript" mdui-tooltip="{content: 'javascript'}"><code class="language-javascript"><span class="token keyword">import</span> config <span class="token keyword">from</span>  <span class="token string">'./config'</span><span class="token keyword">import</span> <span class="token punctuation">{</span>Stomp <span class="token keyword">as</span> stompjs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./stomp'</span><span class="token keyword">import</span> Taro <span class="token keyword">from</span> <span class="token string">'@tarojs/taro'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> isString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'lodash'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//MQ消费者,用于订阅RabbitMQ队列</span><span class="token comment" spellcheck="true">//用法</span><span class="token comment" spellcheck="true">// let mqConsumer=  MqConsumer.subscribe_queue("队列名",(data) => {</span><span class="token comment" spellcheck="true">//     //收到数据</span><span class="token comment" spellcheck="true">//     let msg =JSON.parse(data.body); </span><span class="token comment" spellcheck="true">//     console.log("mq消息",msg);</span><span class="token comment" spellcheck="true">//     pd_layer.msg(data.body);</span><span class="token comment" spellcheck="true">// })</span><span class="token comment" spellcheck="true">// setTimeout(function(){</span><span class="token comment" spellcheck="true">//   mqConsumer.send({a:1});</span><span class="token comment" spellcheck="true">// }</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">MqConsumer</span><span class="token punctuation">{</span>    serverUrl<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    ws<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    client<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    queue<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    onMsg<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    t<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    MAX<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">;</span>    socketOpen<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>    sendMsgQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token operator">=</span>queue<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>onMsg<span class="token operator">=</span>onMsg<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>serverUrl <span class="token operator">=</span> config<span class="token punctuation">.</span>hostname<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>config<span class="token punctuation">.</span>port<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// rabbitmq服务的地址与端口号</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>socketOpen<span class="token punctuation">)</span> <span class="token punctuation">{</span>                that<span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>queue<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">isString</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token operator">?</span>msg<span class="token punctuation">:</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化 ws 对象</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">sendSocketMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>socketOpen<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Taro<span class="token punctuation">.</span><span class="token function">sendSocketMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                        data<span class="token punctuation">:</span> msg                    <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/////////////////////////////////////////////////////</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ws <span class="token operator">=</span> <span class="token punctuation">{</span> send<span class="token punctuation">:</span> sendSocketMessage<span class="token punctuation">,</span>  onopen<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  onmessage<span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>        Taro<span class="token punctuation">.</span><span class="token function">connectSocket</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`ws://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>serverUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/ws`</span></span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>st<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>st<span class="token operator">=</span>st<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketOpen</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'WebSocket连接已打开！'</span><span class="token punctuation">)</span>            that<span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">true</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">sendSocketMessage</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            that<span class="token punctuation">.</span>sendMsgQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onopen <span class="token operator">&amp;&amp;</span> that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">onopen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketMessage</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ws消息:'</span><span class="token punctuation">)</span>            that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onmessage <span class="token operator">&amp;&amp;</span> that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">onmessage</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketError</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ws异常！'</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>            that<span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">false</span>            that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketClose</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ws断开！'</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>            that<span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">false</span>            that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">setClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获得Stomp client对象</span>        stompjs<span class="token punctuation">.</span>setInterval <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>        stompjs<span class="token punctuation">.</span>clearInterval <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client <span class="token operator">=</span> stompjs<span class="token punctuation">.</span><span class="token function">over</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置心跳</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span>outgoing <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span>incoming <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment" spellcheck="true">// 定义连接成功回调函数</span>        <span class="token keyword">let</span> onConnect <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'连接MQ成功'</span><span class="token punctuation">)</span>            <span class="token keyword">var</span> headers <span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//  headers.durable=false;</span>            <span class="token comment" spellcheck="true">//  headers['auto-delete']=false;</span>            <span class="token comment" spellcheck="true">//  headers['exclusive']=false;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onMsg<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> msg <span class="token operator">=</span> data<span class="token punctuation">.</span>body<span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"MQ消息："</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> _onError <span class="token operator">=</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mq异常"</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span>            that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 定义客户端信息</span>        <span class="token keyword">let</span> clientInfo <span class="token operator">=</span> <span class="token punctuation">{</span>            login<span class="token punctuation">:</span> config<span class="token punctuation">.</span>user<span class="token punctuation">,</span>            passcode<span class="token punctuation">:</span> config<span class="token punctuation">.</span>password<span class="token punctuation">,</span>            host<span class="token punctuation">:</span><span class="token string">'/'</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 连接rabbitmq</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>clientInfo<span class="token punctuation">,</span> onConnect<span class="token punctuation">,</span> _onError<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 用户名，密码，成功回调，错误回调，主机</span>    <span class="token punctuation">}</span>    <span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">{</span>        that<span class="token punctuation">.</span>count <span class="token operator">++</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ws重连...【"</span> <span class="token operator">+</span> that<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token string">"】"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//1与服务器已经建立连接</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>st<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            that<span class="token punctuation">.</span>t<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>            that<span class="token punctuation">.</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>count <span class="token operator">>=</span> that<span class="token punctuation">.</span>MAX<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"重连失败超过设定次数..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//2已经关闭了与服务器的连接</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>st<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                that<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            that<span class="token punctuation">.</span>t<span class="token operator">&amp;&amp;</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//0正尝试与服务器建立连接,2正在关闭与服务器的连接</span>            that<span class="token punctuation">.</span>t <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token function">subscribe_queue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MqConsumer</span><span class="token punctuation">(</span><span class="token string">'/queue/'</span><span class="token operator">+</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token function">subscribe_topic</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//测试过，暂时使用不了</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MqConsumer</span><span class="token punctuation">(</span><span class="token string">'/topic/'</span><span class="token operator">+</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>可以断线重连，一段时间后连接会自动断掉，原因我知道</li><li>queue使用正常，topic收不到消息不能正常使用，可能是我哪里设置有问题</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;stompjs下载，（不要用npm安装stomp）&quot;&gt;&lt;a href=&quot;#stompjs下载，（不要用npm安装stomp）&quot; class=&quot;headerlink&quot; title=&quot;stompjs下载，（不要用npm安装stomp）&quot;&gt;&lt;/a&gt;stompjs下载，（
      
    
    </summary>
    
    
      <category term="前端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="rabbitmq" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/rabbitmq/"/>
    
      <category term="taro" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/taro/"/>
    
      <category term="小程序" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="stomp" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/stomp/"/>
    
  </entry>
  
  <entry>
    <title>RESTClient笔记</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/%E5%B7%A5%E5%85%B7/RESTClient%E7%AC%94%E8%AE%B0/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/%E5%B7%A5%E5%85%B7/RESTClient%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-10T18:58:33.000Z</published>
    <updated>2020-07-11T16:06:30.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rest-Client笔记"><a href="#Rest-Client笔记" class="headerlink" title="Rest Client笔记"></a>Rest Client笔记</h1><h2 id="Rest-Client是什么"><a href="#Rest-Client是什么" class="headerlink" title="Rest Client是什么"></a>Rest Client是什么</h2><p>  是一个vscode插件，可以用它来进行http请求，GET,POST,PUT,DELETE都支持，这样测试接口在vscode也能进行，不用apiPost，浏览器等工具了</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ul><li>安装该插件</li><li>新建*.http这种以http为后缀的文件</li><li>文件内容编辑<pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">@url<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">3333</span>  <span class="token comment" spellcheck="true">//声明变量</span><span class="token comment" spellcheck="true">//###  表示一个请求</span>### <span class="token comment" spellcheck="true">//接口1 get请求，接收html内容，带了参数aa</span>GET <span class="token punctuation">{</span><span class="token punctuation">{</span>url<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">?</span>aa<span class="token operator">=</span><span class="token number">1111</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre><code>### //接口2 post请求，接收json，带了body请求体POST {{url}}content-type: application/json//声明接收json，跟请求体之间空一行{    &quot;name&quot;:&quot;21111&quot;,    &quot;name2&quot;:&quot;22222&quot;,    &quot;type&quot;:1}### //接口3  请求头里带token认证POST {{url}}content-type: application/jsonAuthorization: token xxx{    &quot;name&quot;:&quot;21111&quot;,    &quot;name2&quot;:&quot;22222&quot;,    &quot;type&quot;:1}</code></pre><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Rest-Client笔记&quot;&gt;&lt;a href=&quot;#Rest-Client笔记&quot; class=&quot;headerlink&quot; title=&quot;Rest Client笔记&quot;&gt;&lt;/a&gt;Rest Client笔记&lt;/h1&gt;&lt;h2 id=&quot;Rest-Client是什么&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
      <category term="工具" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Rest" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/Rest/"/>
    
      <category term="http请求" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/http%E8%AF%B7%E6%B1%82/"/>
    
      <category term="vscode插件" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/vscode%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>adonisjs笔记</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/%E5%90%8E%E7%AB%AF/adonisjs%E7%AC%94%E8%AE%B0/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/%E5%90%8E%E7%AB%AF/adonisjs%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-10T18:57:34.000Z</published>
    <updated>2020-07-11T16:07:21.704Z</updated>
    
    <content type="html"><![CDATA[<h1 id="adonisjs笔记"><a href="#adonisjs笔记" class="headerlink" title="adonisjs笔记"></a>adonisjs笔记</h1><h2 id="安装adonis"><a href="#安装adonis" class="headerlink" title="安装adonis"></a>安装adonis</h2><ul><li><p><code>cnpm i -g adonis-cli</code> 安装</p></li><li><p><code>adonis new myapp</code>   新建项目</p></li><li><p><code>adonis  serve --dev</code>  启动项目</p><h2 id="使用adonis"><a href="#使用adonis" class="headerlink" title="使用adonis"></a>使用adonis</h2></li><li><p>新建项目后，命令使用</p><ul><li><code>adonis make:controller User --http</code> 会新建一个UserController </li><li><code>adonis make:model User</code> 会新建一个User的model </li></ul></li><li><p>控制器的接口</p><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>请求体<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>GET url<span class="token operator">/</span>index<span class="token operator">?</span>aa<span class="token operator">=</span><span class="token number">1111</span>content<span class="token operator">-</span>type<span class="token punctuation">:</span> application<span class="token operator">/</span>json<span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"21111"</span><span class="token punctuation">,</span>    <span class="token string">"name2"</span><span class="token punctuation">:</span><span class="token string">"22222"</span><span class="token punctuation">,</span>    <span class="token string">"type"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>接口入口<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>  <span class="token keyword">async</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">{</span>request<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">////解构出request参数</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// { aa: '1111', name: '21111', name2: '22222', type: 1 }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ aa: '1111' }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ name: '21111', name2: '22222', type: 1 }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ name: '21111', type: 1 }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">except</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'name2'</span><span class="token punctuation">,</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ aa: '1111', name: '21111' }</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>model示例</p><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token string">'use strict'</span><span class="token keyword">const</span> Model <span class="token operator">=</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'Model'</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Product<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>路由<br>添加路由<code>Route.get(&#39;/&#39;,&#39;SetController.index&#39;)</code>,访问/目录就会进入SetController.index方法<br>##使用mongodb</p><h3 id="安装lucid-mongo"><a href="#安装lucid-mongo" class="headerlink" title="安装lucid-mongo"></a>安装lucid-mongo</h3><p><code>adonis install lucid-mongo -s</code></p><h3 id="lucid-mongo版本用法"><a href="#lucid-mongo版本用法" class="headerlink" title="lucid-mongo版本用法"></a>lucid-mongo版本用法</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token comment" spellcheck="true">// version 2 style</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> or<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> gte<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> lte<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> is_blocked<span class="token punctuation">:</span> <span class="token punctuation">{</span> exists<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// version 3 style</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> $or<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> $lte<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> is_blocked<span class="token punctuation">:</span> <span class="token punctuation">{</span> $exists<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="代码配置"><a href="#代码配置" class="headerlink" title="代码配置"></a>代码配置</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token keyword">const</span> providers <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token comment" spellcheck="true">// ...</span>  <span class="token string">'lucid-mongo/providers/LucidMongoProvider'</span><span class="token punctuation">]</span><span class="token keyword">const</span> aceProviders <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token comment" spellcheck="true">// ...</span>  <span class="token string">'lucid-mongo/providers/MigrationsProvider'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置config-database-js"><a href="#配置config-database-js" class="headerlink" title="配置config/database.js"></a>配置<code>config/database.js</code></h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  connection<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_CONNECTION'</span><span class="token punctuation">,</span> <span class="token string">'mongodb'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  mongodb<span class="token punctuation">:</span> <span class="token punctuation">{</span>    client<span class="token punctuation">:</span> <span class="token string">'mongodb'</span><span class="token punctuation">,</span>    connectionString<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_CONNECTION_STRING'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    connection<span class="token punctuation">:</span> <span class="token punctuation">{</span>      host<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_HOST'</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      port<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_PORT'</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      username<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_USER'</span><span class="token punctuation">,</span> <span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      password<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_PASSWORD'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      database<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_DATABASE'</span><span class="token punctuation">,</span> <span class="token string">'adonis'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      options<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// replicaSet: Env.get('DB_REPLICA_SET', '')</span>        <span class="token comment" spellcheck="true">// ssl: Env.get('DB_SSL, '')</span>        <span class="token comment" spellcheck="true">// connectTimeoutMS: Env.get('DB_CONNECT_TIMEOUT_MS', 15000),</span>        <span class="token comment" spellcheck="true">// socketTimeoutMS: Env.get('DB_SOCKET_TIMEOUT_MS', 180000),</span>        <span class="token comment" spellcheck="true">// w: Env.get('DB_W, 0),</span>        <span class="token comment" spellcheck="true">// readPreference: Env.get('DB_READ_PREFERENCE', 'secondary'),</span>        <span class="token comment" spellcheck="true">// authSource: Env.get('DB_AUTH_SOURCE', ''),</span>        <span class="token comment" spellcheck="true">// authMechanism: Env.get('DB_AUTH_MECHANISM', ''),</span>        <span class="token comment" spellcheck="true">// other options</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置认证config-auth-js"><a href="#配置认证config-auth-js" class="headerlink" title="配置认证config/auth.js"></a>配置认证config/auth.js</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">  session<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'session'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'password'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  basic<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'basic'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'password'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  jwt<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    token<span class="token punctuation">:</span> <span class="token string">'App/Models/Token'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'jwt'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'password'</span><span class="token punctuation">,</span>    expiry<span class="token punctuation">:</span> <span class="token string">'20m'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>      secret<span class="token punctuation">:</span> <span class="token string">'self::app.appKey'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  api<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'api'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    token<span class="token punctuation">:</span> <span class="token string">'App/Models/Token'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'username'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    expiry<span class="token punctuation">:</span> <span class="token string">'30d'</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查询语法"><a href="#查询语法" class="headerlink" title="查询语法"></a>查询语法</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'peter'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'peter'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  $or<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> gender<span class="token punctuation">:</span> <span class="token string">'female'</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span> gender<span class="token punctuation">:</span> <span class="token string">'male'</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">22</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> user <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">'peter'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lte</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string">'-age'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'>='</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'>='</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// to query geo near you need add 2d or 2dsphere index in migration file</span><span class="token keyword">const</span> images <span class="token operator">=</span> <span class="token keyword">await</span> Image  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">near</span><span class="token punctuation">(</span><span class="token punctuation">{</span> center<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">maxDistance</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> images <span class="token operator">=</span> <span class="token keyword">await</span> Image  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">near</span><span class="token punctuation">(</span><span class="token punctuation">{</span> center<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sphere<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">maxDistance</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Aggregation"><a href="#Aggregation" class="headerlink" title="Aggregation"></a>Aggregation</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">  <span class="token comment" spellcheck="true">// count without group by</span>  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token keyword">await</span> Customer<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// count group by `position`</span>  <span class="token keyword">const</span> count_rows <span class="token operator">=</span> <span class="token keyword">await</span> Customer    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> invited<span class="token punctuation">:</span> <span class="token punctuation">{</span> $exist<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string">'position'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// max age without group by</span>  <span class="token keyword">const</span> max <span class="token operator">=</span> <span class="token keyword">await</span> Employee<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// sum `salary` group by `department_id`</span>  <span class="token keyword">const</span> total_rows <span class="token operator">=</span> <span class="token keyword">await</span> Employee    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>active<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token string">'salary'</span><span class="token punctuation">,</span> <span class="token string">'department_id'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// average group by `department_id` and `role_id`</span>  <span class="token keyword">const</span> avg_rows <span class="token operator">=</span> <span class="token keyword">await</span> Employee    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>active<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">avg</span><span class="token punctuation">(</span><span class="token string">'salary'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> department<span class="token punctuation">:</span> <span class="token string">'$department_id'</span><span class="token punctuation">,</span> role<span class="token punctuation">:</span> <span class="token string">'$role_id'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;adonisjs笔记&quot;&gt;&lt;a href=&quot;#adonisjs笔记&quot; class=&quot;headerlink&quot; title=&quot;adonisjs笔记&quot;&gt;&lt;/a&gt;adonisjs笔记&lt;/h1&gt;&lt;h2 id=&quot;安装adonis&quot;&gt;&lt;a href=&quot;#安装adonis&quot; cla
      
    
    </summary>
    
    
      <category term="后端" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="nodejs" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%90%8E%E7%AB%AF/nodejs/"/>
    
    
      <category term="adonisjs" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/adonisjs/"/>
    
      <category term="nodejs" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/nodejs/"/>
    
      <category term="lucid-mongo" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/lucid-mongo/"/>
    
      <category term="CRUD" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/CRUD/"/>
    
      <category term="接口" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
</feed>
