<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>想你开心每一天</title>
  
  <subtitle>想你开心每一天1</subtitle>
  <link href="/NGY198888.gtihub.io/atom.xml" rel="self"/>
  
  <link href="https://ngy198888.github.io/NGY198888.gtihub.io/"/>
  <updated>2020-07-10T19:01:35.645Z</updated>
  <id>https://ngy198888.github.io/NGY198888.gtihub.io/</id>
  
  <author>
    <name>ngy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rabbitmq，taro,小程序，stomp</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/rabbitmq%EF%BC%8Ctaro-%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%8Cstomp/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/rabbitmq%EF%BC%8Ctaro-%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%8Cstomp/</id>
    <published>2020-07-10T19:00:55.000Z</published>
    <updated>2020-07-10T19:01:35.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="stompjs下载，（不要用npm安装stomp）"><a href="#stompjs下载，（不要用npm安装stomp）" class="headerlink" title="stompjs下载，（不要用npm安装stomp）"></a>stompjs下载，（不要用npm安装stomp）</h2><p><a href="https://github.com/rabbitmq/rabbitmq-web-stomp-examples/tree/master/priv" target="_blank" rel="noopener">下载地址</a></p><h2 id="rabbitmq的连接配置"><a href="#rabbitmq的连接配置" class="headerlink" title="rabbitmq的连接配置"></a>rabbitmq的连接配置</h2><p><img src="https://img-blog.csdnimg.cn/20200701174211411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05HWTE5ODg4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="基于Taro，stomp的RabbitMQ消费者实现"><a href="#基于Taro，stomp的RabbitMQ消费者实现" class="headerlink" title="基于Taro，stomp的RabbitMQ消费者实现"></a>基于Taro，stomp的RabbitMQ消费者实现</h2><pre class="line-numbers language-javascript" mdui-tooltip="{content: 'javascript'}"><code class="language-javascript"><span class="token keyword">import</span> config <span class="token keyword">from</span>  <span class="token string">'./config'</span><span class="token keyword">import</span> <span class="token punctuation">{</span>Stomp <span class="token keyword">as</span> stompjs<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./stomp'</span><span class="token keyword">import</span> Taro <span class="token keyword">from</span> <span class="token string">'@tarojs/taro'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> isString <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'lodash'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//MQ消费者,用于订阅RabbitMQ队列</span><span class="token comment" spellcheck="true">//用法</span><span class="token comment" spellcheck="true">// let mqConsumer=  MqConsumer.subscribe_queue("队列名",(data) => {</span><span class="token comment" spellcheck="true">//     //收到数据</span><span class="token comment" spellcheck="true">//     let msg =JSON.parse(data.body); </span><span class="token comment" spellcheck="true">//     console.log("mq消息",msg);</span><span class="token comment" spellcheck="true">//     pd_layer.msg(data.body);</span><span class="token comment" spellcheck="true">// })</span><span class="token comment" spellcheck="true">// setTimeout(function(){</span><span class="token comment" spellcheck="true">//   mqConsumer.send({a:1});</span><span class="token comment" spellcheck="true">// }</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">MqConsumer</span><span class="token punctuation">{</span>    serverUrl<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    ws<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    client<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    queue<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    onMsg<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    t<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    MAX<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">;</span>    socketOpen<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>    sendMsgQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token operator">=</span>queue<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>onMsg<span class="token operator">=</span>onMsg<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>serverUrl <span class="token operator">=</span> config<span class="token punctuation">.</span>hostname<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>config<span class="token punctuation">.</span>port<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// rabbitmq服务的地址与端口号</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>socketOpen<span class="token punctuation">)</span> <span class="token punctuation">{</span>                that<span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>queue<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">isString</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token operator">?</span>msg<span class="token punctuation">:</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 初始化 ws 对象</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">sendSocketMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>socketOpen<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Taro<span class="token punctuation">.</span><span class="token function">sendSocketMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                        data<span class="token punctuation">:</span> msg                    <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">/////////////////////////////////////////////////////</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>ws <span class="token operator">=</span> <span class="token punctuation">{</span> send<span class="token punctuation">:</span> sendSocketMessage<span class="token punctuation">,</span>  onopen<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  onmessage<span class="token punctuation">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>        Taro<span class="token punctuation">.</span><span class="token function">connectSocket</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`ws://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>serverUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/ws`</span></span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>st<span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">.</span>st<span class="token operator">=</span>st<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketOpen</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'WebSocket连接已打开！'</span><span class="token punctuation">)</span>            that<span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">true</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">sendSocketMessage</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>sendMsgQueue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            that<span class="token punctuation">.</span>sendMsgQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onopen <span class="token operator">&amp;&amp;</span> that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">onopen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketMessage</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ws消息:'</span><span class="token punctuation">)</span>            that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>onmessage <span class="token operator">&amp;&amp;</span> that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span><span class="token function">onmessage</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketError</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ws异常！'</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>            that<span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">false</span>            that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        Taro<span class="token punctuation">.</span><span class="token function">onSocketClose</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'ws断开！'</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>            that<span class="token punctuation">.</span>socketOpen <span class="token operator">=</span> <span class="token boolean">false</span>            that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">setClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 获得Stomp client对象</span>        stompjs<span class="token punctuation">.</span>setInterval <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>        stompjs<span class="token punctuation">.</span>clearInterval <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client <span class="token operator">=</span> stompjs<span class="token punctuation">.</span><span class="token function">over</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>ws<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置心跳</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span>outgoing <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span>incoming <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment" spellcheck="true">// 定义连接成功回调函数</span>        <span class="token keyword">let</span> onConnect <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'连接MQ成功'</span><span class="token punctuation">)</span>            <span class="token keyword">var</span> headers <span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//  headers.durable=false;</span>            <span class="token comment" spellcheck="true">//  headers['auto-delete']=false;</span>            <span class="token comment" spellcheck="true">//  headers['exclusive']=false;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queue<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onMsg<span class="token operator">||</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> msg <span class="token operator">=</span> data<span class="token punctuation">.</span>body<span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"MQ消息："</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token keyword">let</span> that<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> _onError <span class="token operator">=</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mq异常"</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span>            that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 定义客户端信息</span>        <span class="token keyword">let</span> clientInfo <span class="token operator">=</span> <span class="token punctuation">{</span>            login<span class="token punctuation">:</span> config<span class="token punctuation">.</span>user<span class="token punctuation">,</span>            passcode<span class="token punctuation">:</span> config<span class="token punctuation">.</span>password<span class="token punctuation">,</span>            host<span class="token punctuation">:</span><span class="token string">'/'</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 连接rabbitmq</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>clientInfo<span class="token punctuation">,</span> onConnect<span class="token punctuation">,</span> _onError<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 用户名，密码，成功回调，错误回调，主机</span>    <span class="token punctuation">}</span>    <span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">{</span>        that<span class="token punctuation">.</span>count <span class="token operator">++</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"ws重连...【"</span> <span class="token operator">+</span> that<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token string">"】"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//1与服务器已经建立连接</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>st<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            that<span class="token punctuation">.</span>t<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>            that<span class="token punctuation">.</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>count <span class="token operator">>=</span> that<span class="token punctuation">.</span>MAX<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"重连失败超过设定次数..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//2已经关闭了与服务器的连接</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>ws<span class="token punctuation">.</span>st<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                that<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            that<span class="token punctuation">.</span>t<span class="token operator">&amp;&amp;</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//0正尝试与服务器建立连接,2正在关闭与服务器的连接</span>            that<span class="token punctuation">.</span>t <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>that<span class="token punctuation">.</span><span class="token function">reConnect</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token function">subscribe_queue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MqConsumer</span><span class="token punctuation">(</span><span class="token string">'/queue/'</span><span class="token operator">+</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token function">subscribe_topic</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//测试过，暂时使用不了</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MqConsumer</span><span class="token punctuation">(</span><span class="token string">'/topic/'</span><span class="token operator">+</span>queue<span class="token punctuation">,</span>onMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>可以断线重连，一段时间后连接会自动断掉，原因我知道</li><li>queue使用正常，topic收不到消息不能正常使用，可能是我哪里设置有问题</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;stompjs下载，（不要用npm安装stomp）&quot;&gt;&lt;a href=&quot;#stompjs下载，（不要用npm安装stomp）&quot; class=&quot;headerlink&quot; title=&quot;stompjs下载，（不要用npm安装stomp）&quot;&gt;&lt;/a&gt;stompjs下载，（
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>RESTClient笔记</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/RESTClient%E7%AC%94%E8%AE%B0/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/RESTClient%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-10T18:58:33.000Z</published>
    <updated>2020-07-10T20:15:35.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rest-Client笔记"><a href="#Rest-Client笔记" class="headerlink" title="Rest Client笔记"></a>Rest Client笔记</h1><h2 id="Rest-Client是什么"><a href="#Rest-Client是什么" class="headerlink" title="Rest Client是什么"></a>Rest Client是什么</h2><p>  是一个vscode插件，可以用它来进行http请求，GET,POST,PUT,DELETE都支持，这样测试接口在vscode也能进行，不用apiPost，浏览器等工具了</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ul><li>安装该插件</li><li>新建*.http这种以http为后缀的文件</li><li>文件内容编辑<pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">@url<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">3333</span>  <span class="token comment" spellcheck="true">//声明变量</span><span class="token comment" spellcheck="true">//###  表示一个请求</span>### <span class="token comment" spellcheck="true">//接口1 get请求，接收html内容，带了参数aa</span>GET <span class="token punctuation">{</span><span class="token punctuation">{</span>url<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">?</span>aa<span class="token operator">=</span><span class="token number">1111</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre><code>### //接口2 post请求，接收json，带了body请求体POST {{url}}content-type: application/json//声明接收json，跟请求体之间空一行{    &quot;name&quot;:&quot;21111&quot;,    &quot;name2&quot;:&quot;22222&quot;,    &quot;type&quot;:1}### //接口3  请求头里带token认证POST {{url}}content-type: application/jsonAuthorization: token xxx{    &quot;name&quot;:&quot;21111&quot;,    &quot;name2&quot;:&quot;22222&quot;,    &quot;type&quot;:1}</code></pre><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Rest-Client笔记&quot;&gt;&lt;a href=&quot;#Rest-Client笔记&quot; class=&quot;headerlink&quot; title=&quot;Rest Client笔记&quot;&gt;&lt;/a&gt;Rest Client笔记&lt;/h1&gt;&lt;h2 id=&quot;Rest-Client是什么&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
      <category term="工具" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Rest" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/Rest/"/>
    
      <category term="http请求" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/http%E8%AF%B7%E6%B1%82/"/>
    
      <category term="vscode插件" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/vscode%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>adonisjs笔记</title>
    <link href="https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/adonisjs%E7%AC%94%E8%AE%B0/"/>
    <id>https://ngy198888.github.io/NGY198888.gtihub.io/2020/07/11/adonisjs%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-10T18:57:34.000Z</published>
    <updated>2020-07-10T20:12:50.222Z</updated>
    
    <content type="html"><![CDATA[<h1 id="adonisjs笔记"><a href="#adonisjs笔记" class="headerlink" title="adonisjs笔记"></a>adonisjs笔记</h1><h2 id="安装adonis"><a href="#安装adonis" class="headerlink" title="安装adonis"></a>安装adonis</h2><ul><li><p><code>cnpm i -g adonis-cli</code> 安装</p></li><li><p><code>adonis new myapp</code>   新建项目</p></li><li><p><code>adonis  serve --dev</code>  启动项目</p><h2 id="使用adonis"><a href="#使用adonis" class="headerlink" title="使用adonis"></a>使用adonis</h2></li><li><p>新建项目后，命令使用</p><ul><li><code>adonis make:controller User --http</code> 会新建一个UserController </li><li><code>adonis make:model User</code> 会新建一个User的model </li></ul></li><li><p>控制器的接口</p><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>请求体<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>GET url<span class="token operator">/</span>index<span class="token operator">?</span>aa<span class="token operator">=</span><span class="token number">1111</span>content<span class="token operator">-</span>type<span class="token punctuation">:</span> application<span class="token operator">/</span>json<span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"21111"</span><span class="token punctuation">,</span>    <span class="token string">"name2"</span><span class="token punctuation">:</span><span class="token string">"22222"</span><span class="token punctuation">,</span>    <span class="token string">"type"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>接口入口<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>  <span class="token keyword">async</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">{</span>request<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">////解构出request参数</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// { aa: '1111', name: '21111', name2: '22222', type: 1 }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ aa: '1111' }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ name: '21111', name2: '22222', type: 1 }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ name: '21111', type: 1 }</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">except</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'name2'</span><span class="token punctuation">,</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//{ aa: '1111', name: '21111' }</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>model示例</p><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token string">'use strict'</span><span class="token keyword">const</span> Model <span class="token operator">=</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token string">'Model'</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Product<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>路由<br>添加路由<code>Route.get(&#39;/&#39;,&#39;SetController.index&#39;)</code>,访问/目录就会进入SetController.index方法<br>##使用mongodb</p><h3 id="安装lucid-mongo"><a href="#安装lucid-mongo" class="headerlink" title="安装lucid-mongo"></a>安装lucid-mongo</h3><p><code>adonis install lucid-mongo -s</code></p><h3 id="lucid-mongo版本用法"><a href="#lucid-mongo版本用法" class="headerlink" title="lucid-mongo版本用法"></a>lucid-mongo版本用法</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token comment" spellcheck="true">// version 2 style</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> or<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> gte<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> lte<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> is_blocked<span class="token punctuation">:</span> <span class="token punctuation">{</span> exists<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// version 3 style</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> $or<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> $lte<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> is_blocked<span class="token punctuation">:</span> <span class="token punctuation">{</span> $exists<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="代码配置"><a href="#代码配置" class="headerlink" title="代码配置"></a>代码配置</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token keyword">const</span> providers <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token comment" spellcheck="true">// ...</span>  <span class="token string">'lucid-mongo/providers/LucidMongoProvider'</span><span class="token punctuation">]</span><span class="token keyword">const</span> aceProviders <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token comment" spellcheck="true">// ...</span>  <span class="token string">'lucid-mongo/providers/MigrationsProvider'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置config-database-js"><a href="#配置config-database-js" class="headerlink" title="配置config/database.js"></a>配置<code>config/database.js</code></h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  connection<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_CONNECTION'</span><span class="token punctuation">,</span> <span class="token string">'mongodb'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  mongodb<span class="token punctuation">:</span> <span class="token punctuation">{</span>    client<span class="token punctuation">:</span> <span class="token string">'mongodb'</span><span class="token punctuation">,</span>    connectionString<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_CONNECTION_STRING'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    connection<span class="token punctuation">:</span> <span class="token punctuation">{</span>      host<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_HOST'</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      port<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_PORT'</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      username<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_USER'</span><span class="token punctuation">,</span> <span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      password<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_PASSWORD'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      database<span class="token punctuation">:</span> Env<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'DB_DATABASE'</span><span class="token punctuation">,</span> <span class="token string">'adonis'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      options<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// replicaSet: Env.get('DB_REPLICA_SET', '')</span>        <span class="token comment" spellcheck="true">// ssl: Env.get('DB_SSL, '')</span>        <span class="token comment" spellcheck="true">// connectTimeoutMS: Env.get('DB_CONNECT_TIMEOUT_MS', 15000),</span>        <span class="token comment" spellcheck="true">// socketTimeoutMS: Env.get('DB_SOCKET_TIMEOUT_MS', 180000),</span>        <span class="token comment" spellcheck="true">// w: Env.get('DB_W, 0),</span>        <span class="token comment" spellcheck="true">// readPreference: Env.get('DB_READ_PREFERENCE', 'secondary'),</span>        <span class="token comment" spellcheck="true">// authSource: Env.get('DB_AUTH_SOURCE', ''),</span>        <span class="token comment" spellcheck="true">// authMechanism: Env.get('DB_AUTH_MECHANISM', ''),</span>        <span class="token comment" spellcheck="true">// other options</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置认证config-auth-js"><a href="#配置认证config-auth-js" class="headerlink" title="配置认证config/auth.js"></a>配置认证config/auth.js</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">  session<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'session'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'password'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  basic<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'basic'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'password'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  jwt<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    token<span class="token punctuation">:</span> <span class="token string">'App/Models/Token'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'jwt'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'password'</span><span class="token punctuation">,</span>    expiry<span class="token punctuation">:</span> <span class="token string">'20m'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>      secret<span class="token punctuation">:</span> <span class="token string">'self::app.appKey'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  api<span class="token punctuation">:</span> <span class="token punctuation">{</span>    serializer<span class="token punctuation">:</span> <span class="token string">'LucidMongo'</span><span class="token punctuation">,</span>    scheme<span class="token punctuation">:</span> <span class="token string">'api'</span><span class="token punctuation">,</span>    model<span class="token punctuation">:</span> <span class="token string">'App/Models/User'</span><span class="token punctuation">,</span>    token<span class="token punctuation">:</span> <span class="token string">'App/Models/Token'</span><span class="token punctuation">,</span>    uid<span class="token punctuation">:</span> <span class="token string">'username'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    expiry<span class="token punctuation">:</span> <span class="token string">'30d'</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查询语法"><a href="#查询语法" class="headerlink" title="查询语法"></a>查询语法</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js"><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'peter'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'peter'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  $or<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> gender<span class="token punctuation">:</span> <span class="token string">'female'</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span> gender<span class="token punctuation">:</span> <span class="token string">'male'</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">22</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> user <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">'peter'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lte</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string">'-age'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token punctuation">{</span> $gte<span class="token punctuation">:</span> <span class="token number">18</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> age<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'>='</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token keyword">const</span> users <span class="token operator">=</span>  <span class="token keyword">await</span> User<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'>='</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// to query geo near you need add 2d or 2dsphere index in migration file</span><span class="token keyword">const</span> images <span class="token operator">=</span> <span class="token keyword">await</span> Image  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">near</span><span class="token punctuation">(</span><span class="token punctuation">{</span> center<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">maxDistance</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> images <span class="token operator">=</span> <span class="token keyword">await</span> Image  <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">near</span><span class="token punctuation">(</span><span class="token punctuation">{</span> center<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sphere<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">maxDistance</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Aggregation"><a href="#Aggregation" class="headerlink" title="Aggregation"></a>Aggregation</h3><pre class="line-numbers language-js" mdui-tooltip="{content: 'js'}"><code class="language-js">  <span class="token comment" spellcheck="true">// count without group by</span>  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token keyword">await</span> Customer<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// count group by `position`</span>  <span class="token keyword">const</span> count_rows <span class="token operator">=</span> <span class="token keyword">await</span> Customer    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">{</span> invited<span class="token punctuation">:</span> <span class="token punctuation">{</span> $exist<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string">'position'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// max age without group by</span>  <span class="token keyword">const</span> max <span class="token operator">=</span> <span class="token keyword">await</span> Employee<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// sum `salary` group by `department_id`</span>  <span class="token keyword">const</span> total_rows <span class="token operator">=</span> <span class="token keyword">await</span> Employee    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>active<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token string">'salary'</span><span class="token punctuation">,</span> <span class="token string">'department_id'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// average group by `department_id` and `role_id`</span>  <span class="token keyword">const</span> avg_rows <span class="token operator">=</span> <span class="token keyword">await</span> Employee    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>active<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">avg</span><span class="token punctuation">(</span><span class="token string">'salary'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> department<span class="token punctuation">:</span> <span class="token string">'$department_id'</span><span class="token punctuation">,</span> role<span class="token punctuation">:</span> <span class="token string">'$role_id'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;adonisjs笔记&quot;&gt;&lt;a href=&quot;#adonisjs笔记&quot; class=&quot;headerlink&quot; title=&quot;adonisjs笔记&quot;&gt;&lt;/a&gt;adonisjs笔记&lt;/h1&gt;&lt;h2 id=&quot;安装adonis&quot;&gt;&lt;a href=&quot;#安装adonis&quot; cla
      
    
    </summary>
    
    
      <category term="nodejs" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/categories/nodejs/"/>
    
    
      <category term="adonisjs" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/adonisjs/"/>
    
      <category term="nodejs" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/nodejs/"/>
    
      <category term="lucid-mongo" scheme="https://ngy198888.github.io/NGY198888.gtihub.io/tags/lucid-mongo/"/>
    
  </entry>
  
</feed>
